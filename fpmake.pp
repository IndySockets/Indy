{$mode objfpc}{$H+}
program fpmake;

 { Generated automatically by fppkg on 17-10-10 }

uses fpmkunit;

function AddIndyUnit(P : TPackage; const AFileName : String) : TTarget; inline;
begin

  Result:=P.Targets.AddUnit(AFileName);
  Result.Dependencies.AddInclude('IdCompilerDefines.inc');
end;

const
  {$I IdVers.inc}

Var
  P : TPackage;
  T : TTarget;
  D : TDependency;

begin
  With Installer do 
    begin
    { 
      indy
    } 
    P:=AddPackage(gsIdProductName);
    P.Version:=gsIdVersion;
    P.Dependencies.Add('fcl-base');
    D:=P.Dependencies.Add('iconvenc');
    D.OSes:=AllUnixOSes;
    {$IFDEF KYLIXCOMPAT}
    D:=P.Dependencies.Add('libc');
    D.OSes:=[linux];
    D.CPUs:=[i386];
    D:=P.Dependencies.Add('fcl-net');
    D.OSes:=[linux];
    D.CPUs:=T.CPUs - [i386];
    D:=P.Dependencies.Add('fcl-net');
    D.OSes:=AllUnixOSes - [linux];
    {$ELSE}
    D:=P.Dependencies.Add('fcl-net');
    D.OSes:=AllUnixOSes;
    {$ENDIF}
    T:=P.Targets.AddUnit('indysystemfpc.pas');
    T:=P.Targets.AddUnit('indycorefpc.pas');
    T:=P.Targets.AddUnit('indyprotocolsfpc.pas');
    T:=AddIndyUnit(P,'IdASN1Util.pas');   
    T:=AddIndyUnit(P,'IdAllAuthentications.pas');
    T:=AddIndyUnit(P,'IdAllFTPListParsers.pas');
    T:=AddIndyUnit(P,'IdAllHeaderCoders.pas');
    T:=AddIndyUnit(P,'IdAntiFreezeBase.pas');
    T:=AddIndyUnit(P,'IdAssignedNumbers.pas');
    T:=AddIndyUnit(P,'IdAttachment.pas');
    T:=AddIndyUnit(P,'IdAttachmentFile.pas');
    T:=AddIndyUnit(P,'IdAttachmentMemory.pas');
    T:=AddIndyUnit(P,'IdAuthentication.pas');
    T:=AddIndyUnit(P,'IdAuthenticationDigest.pas');
    T:=AddIndyUnit(P,'IdAuthenticationManager.pas');
    T:=AddIndyUnit(P,'IdBaseComponent.pas');
    T:=AddIndyUnit(P,'IdBlockCipherIntercept.pas');
    T:=AddIndyUnit(P,'IdBuffer.pas');
    T:=AddIndyUnit(P,'IdCTypes.pas');
    T:=AddIndyUnit(P,'IdChargenServer.pas');
    T:=AddIndyUnit(P,'IdChargenUDPServer.pas');
    T:=AddIndyUnit(P,'IdCharsets.pas');
    T:=AddIndyUnit(P,'IdCmdTCPClient.pas');
    T:=AddIndyUnit(P,'IdCmdTCPServer.pas');
    T:=AddIndyUnit(P,'IdCoder.pas');
    T:=AddIndyUnit(P,'IdCoder00E.pas');
    T:=AddIndyUnit(P,'IdCoder3to4.pas');
    T:=AddIndyUnit(P,'IdCoderBinHex4.pas');
    T:=AddIndyUnit(P,'IdCoderHeader.pas');
    T:=AddIndyUnit(P,'IdCoderMIME.pas');
    T:=AddIndyUnit(P,'IdCoderQuotedPrintable.pas');
    T:=AddIndyUnit(P,'IdCoderUUE.pas');
    T:=AddIndyUnit(P,'IdCoderXXE.pas');
    T:=AddIndyUnit(P,'IdCommandHandlers.pas');
    T:=AddIndyUnit(P,'IdComponent.pas');
    T:=AddIndyUnit(P,'IdConnectThroughHttpProxy.pas');
    T:=AddIndyUnit(P,'IdContainers.pas');
    T:=AddIndyUnit(P,'IdContext.pas');
    T:=AddIndyUnit(P,'IdCookie.pas');
    T:=AddIndyUnit(P,'IdCookieManager.pas');
    T:=AddIndyUnit(P,'IdCustomHTTPServer.pas');
    T:=AddIndyUnit(P,'IdCustomTCPServer.pas');
    T:=AddIndyUnit(P,'IdCustomTransparentProxy.pas');
    T:=AddIndyUnit(P,'IdDICT.pas');
    T:=AddIndyUnit(P,'IdDICTCommon.pas');
    T:=AddIndyUnit(P,'IdDICTServer.pas');
    T:=AddIndyUnit(P,'IdDNSCommon.pas');
    T:=AddIndyUnit(P,'IdDNSResolver.pas');
    T:=AddIndyUnit(P,'IdDNSServer.pas');
    T:=AddIndyUnit(P,'IdDateTimeStamp.pas');
    T:=AddIndyUnit(P,'IdDayTime.pas');
    T:=AddIndyUnit(P,'IdDayTimeServer.pas');
    T:=AddIndyUnit(P,'IdDayTimeUDP.pas');
    T:=AddIndyUnit(P,'IdDayTimeUDPServer.pas');
    T:=AddIndyUnit(P,'IdDiscardServer.pas');
    T:=AddIndyUnit(P,'IdDiscardUDPServer.pas');
    T:=AddIndyUnit(P,'IdEMailAddress.pas');
    T:=AddIndyUnit(P,'IdEcho.pas');
    T:=AddIndyUnit(P,'IdEchoServer.pas');
    T:=AddIndyUnit(P,'IdEchoUDP.pas');
    T:=AddIndyUnit(P,'IdEchoUDPServer.pas');
    T:=AddIndyUnit(P,'IdException.pas');
    T:=AddIndyUnit(P,'IdExceptionCore.pas');
    T:=AddIndyUnit(P,'IdExplicitTLSClientServerBase.pas');
    T:=AddIndyUnit(P,'IdFIPS.pas');
    T:=AddIndyUnit(P,'IdFSP.pas');
    T:=AddIndyUnit(P,'IdFTP.pas');
    T:=AddIndyUnit(P,'IdFTPBaseFileSystem.pas');
    T:=AddIndyUnit(P,'IdFTPCommon.pas');
    T:=AddIndyUnit(P,'IdFTPList.pas');
    T:=AddIndyUnit(P,'IdFTPListOutput.pas');
    T:=AddIndyUnit(P,'IdFTPListParseAS400.pas');
    T:=AddIndyUnit(P,'IdFTPListParseBase.pas');
    T:=AddIndyUnit(P,'IdFTPListParseBullGCOS7.pas');
    T:=AddIndyUnit(P,'IdFTPListParseBullGCOS8.pas');
    T:=AddIndyUnit(P,'IdFTPListParseChameleonNewt.pas');
    T:=AddIndyUnit(P,'IdFTPListParseCiscoIOS.pas');
    T:=AddIndyUnit(P,'IdFTPListParseDistinctTCPIP.pas');
    T:=AddIndyUnit(P,'IdFTPListParseEPLF.pas');
    T:=AddIndyUnit(P,'IdFTPListParseHellSoft.pas');
    T:=AddIndyUnit(P,'IdFTPListParseIEFTPGateway.pas');
    T:=AddIndyUnit(P,'IdFTPListParseKA9Q.pas');
    T:=AddIndyUnit(P,'IdFTPListParseMPEiX.pas');
    T:=AddIndyUnit(P,'IdFTPListParseMVS.pas');
    T:=AddIndyUnit(P,'IdFTPListParseMicrowareOS9.pas');
    T:=AddIndyUnit(P,'IdFTPListParseMusic.pas');
    T:=AddIndyUnit(P,'IdFTPListParseNCSAForDOS.pas');
    T:=AddIndyUnit(P,'IdFTPListParseNCSAForMACOS.pas');
    T:=AddIndyUnit(P,'IdFTPListParseNovellNetware.pas');
    T:=AddIndyUnit(P,'IdFTPListParseNovellNetwarePSU.pas');
    T:=AddIndyUnit(P,'IdFTPListParseOS2.pas');
    T:=AddIndyUnit(P,'IdFTPListParsePCNFSD.pas');
    T:=AddIndyUnit(P,'IdFTPListParsePCTCP.pas');
    T:=AddIndyUnit(P,'IdFTPListParseStercomOS390Exp.pas');
    T:=AddIndyUnit(P,'IdFTPListParseStercomUnixEnt.pas');
    T:=AddIndyUnit(P,'IdFTPListParseStratusVOS.pas');
    T:=AddIndyUnit(P,'IdFTPListParseSuperTCP.pas');
    T:=AddIndyUnit(P,'IdFTPListParseTOPS20.pas');
    T:=AddIndyUnit(P,'IdFTPListParseTSXPlus.pas');
    T:=AddIndyUnit(P,'IdFTPListParseTandemGuardian.pas');
    T:=AddIndyUnit(P,'IdFTPListParseUnisysClearPath.pas');
    T:=AddIndyUnit(P,'IdFTPListParseUnix.pas');
    T:=AddIndyUnit(P,'IdFTPListParseVM.pas');
    T:=AddIndyUnit(P,'IdFTPListParseVMS.pas');
    T:=AddIndyUnit(P,'IdFTPListParseVSE.pas');
    T:=AddIndyUnit(P,'IdFTPListParseVxWorks.pas');
    T:=AddIndyUnit(P,'IdFTPListParseWfFTP.pas');
    T:=AddIndyUnit(P,'IdFTPListParseWinQVTNET.pas');
    T:=AddIndyUnit(P,'IdFTPListParseWindowsNT.pas');
    T:=AddIndyUnit(P,'IdFTPListParseXecomMicroRTOS.pas');
    T:=AddIndyUnit(P,'IdFTPListTypes.pas');
    T:=AddIndyUnit(P,'IdFTPServer.pas');
    T:=AddIndyUnit(P,'IdFTPServerContextBase.pas');
    T:=AddIndyUnit(P,'IdFinger.pas');
    T:=AddIndyUnit(P,'IdFingerServer.pas');
    T:=AddIndyUnit(P,'IdGlobal.pas');
    T.Dependencies.AddInclude('IdVers.inc');
    T:=AddIndyUnit(P,'IdGlobalCore.pas');
    T:=AddIndyUnit(P,'IdGlobalProtocols.pas');
    T:=AddIndyUnit(P,'IdGopher.pas');
    T:=AddIndyUnit(P,'IdGopherConsts.pas');
    T:=AddIndyUnit(P,'IdGopherServer.pas');
    T:=AddIndyUnit(P,'IdHMAC.pas');
    T:=AddIndyUnit(P,'IdHMACMD5.pas');
    T:=AddIndyUnit(P,'IdHMACSHA1.pas');
    T:=AddIndyUnit(P,'IdHTTP.pas');
    T:=AddIndyUnit(P,'IdHTTPHeaderInfo.pas');
    T:=AddIndyUnit(P,'IdHTTPProxyServer.pas');
    T:=AddIndyUnit(P,'IdHTTPServer.pas');
    T:=AddIndyUnit(P,'IdHash.pas');
    T:=AddIndyUnit(P,'IdHashAdler32.pas');
    T:=AddIndyUnit(P,'IdHashCRC.pas');
    T:=AddIndyUnit(P,'IdHashElf.pas');
    T:=AddIndyUnit(P,'IdHashMessageDigest.pas');
    T:=AddIndyUnit(P,'IdHashSHA.pas');
    T:=AddIndyUnit(P,'IdHeaderCoder2022JP.pas');
    T:=AddIndyUnit(P,'IdHeaderCoderBase.pas');
    T:=AddIndyUnit(P,'IdHeaderCoderIndy.pas');
    T:=AddIndyUnit(P,'IdHeaderCoderPlain.pas');
    T:=AddIndyUnit(P,'IdHeaderCoderUTF.pas');
    T:=AddIndyUnit(P,'IdHeaderList.pas');
    T:=AddIndyUnit(P,'IdIMAP4.pas');
    T:=AddIndyUnit(P,'IdIMAP4Server.pas');
    T:=AddIndyUnit(P,'IdIOHandler.pas');
    T:=AddIndyUnit(P,'IdIOHandlerSocket.pas');
    T:=AddIndyUnit(P,'IdIOHandlerStack.pas');
    T:=AddIndyUnit(P,'IdIOHandlerStream.pas');
    T:=AddIndyUnit(P,'IdIPAddrMon.pas');
    T:=AddIndyUnit(P,'IdIPAddress.pas');
    T:=AddIndyUnit(P,'IdIPMCastBase.pas');
    T:=AddIndyUnit(P,'IdIPMCastClient.pas');
    T:=AddIndyUnit(P,'IdIPMCastServer.pas');
    T:=AddIndyUnit(P,'IdIPWatch.pas');
    T:=AddIndyUnit(P,'IdIRC.pas');
    T:=AddIndyUnit(P,'IdIcmpClient.pas');
    T:=AddIndyUnit(P,'IdIdent.pas');
    T:=AddIndyUnit(P,'IdIdentServer.pas');
    T:=AddIndyUnit(P,'IdIntercept.pas');
    T:=AddIndyUnit(P,'IdInterceptSimLog.pas');
    T:=AddIndyUnit(P,'IdInterceptThrottler.pas');
    T:=AddIndyUnit(P,'IdIrcServer.pas');
    T:=AddIndyUnit(P,'IdLPR.pas');
    T:=AddIndyUnit(P,'IdLogBase.pas');
    T:=AddIndyUnit(P,'IdLogDebug.pas');
    T:=AddIndyUnit(P,'IdLogEvent.pas');
    T:=AddIndyUnit(P,'IdLogFile.pas');
    T:=AddIndyUnit(P,'IdLogStream.pas');
    T:=AddIndyUnit(P,'IdMailBox.pas');
    T:=AddIndyUnit(P,'IdMappedFTP.pas');
    T:=AddIndyUnit(P,'IdMappedPOP3.pas');
    T:=AddIndyUnit(P,'IdMappedPortTCP.pas');
    T:=AddIndyUnit(P,'IdMappedPortUDP.pas');
    T:=AddIndyUnit(P,'IdMappedTelnet.pas');
    T:=AddIndyUnit(P,'IdMessage.pas');
    T:=AddIndyUnit(P,'IdMessageBuilder.pas');
    T:=AddIndyUnit(P,'IdMessageClient.pas');
    T:=AddIndyUnit(P,'IdMessageCoder.pas');
    T:=AddIndyUnit(P,'IdMessageCoderBinHex4.pas');
    T:=AddIndyUnit(P,'IdMessageCoderMIME.pas');
    T:=AddIndyUnit(P,'IdMessageCoderQuotedPrintable.pas');
    T:=AddIndyUnit(P,'IdMessageCoderUUE.pas');
    T:=AddIndyUnit(P,'IdMessageCoderXXE.pas');
    T:=AddIndyUnit(P,'IdMessageCoderYenc.pas');
    T:=AddIndyUnit(P,'IdMessageCollection.pas');
    T:=AddIndyUnit(P,'IdMessageParts.pas');
    T:=AddIndyUnit(P,'IdMultipartFormData.pas');
    T:=AddIndyUnit(P,'IdNNTP.pas');
    T:=AddIndyUnit(P,'IdNNTPServer.pas');
    T:=AddIndyUnit(P,'IdNetworkCalculator.pas');
    T:=AddIndyUnit(P,'IdOSFileName.pas');
    T:=AddIndyUnit(P,'IdOTPCalculator.pas');
    T:=AddIndyUnit(P,'IdPOP3.pas');
    T:=AddIndyUnit(P,'IdPOP3Server.pas');
    T:=AddIndyUnit(P,'IdQOTDUDP.pas');
    T:=AddIndyUnit(P,'IdQOTDUDPServer.pas');
    T:=AddIndyUnit(P,'IdQotd.pas');
    T:=AddIndyUnit(P,'IdQotdServer.pas');
    T:=AddIndyUnit(P,'IdRSH.pas');
    T:=AddIndyUnit(P,'IdRSHServer.pas');
    T:=AddIndyUnit(P,'IdRawBase.pas');
    T:=AddIndyUnit(P,'IdRawClient.pas');
    T:=AddIndyUnit(P,'IdRawFunctions.pas');
    T:=AddIndyUnit(P,'IdRawHeaders.pas');
    T:=AddIndyUnit(P,'IdRemoteCMDClient.pas');
    T:=AddIndyUnit(P,'IdRemoteCMDServer.pas');
    T:=AddIndyUnit(P,'IdReply.pas');
    T:=AddIndyUnit(P,'IdReplyFTP.pas');
    T:=AddIndyUnit(P,'IdReplyIMAP4.pas');
    T:=AddIndyUnit(P,'IdReplyPOP3.pas');
    T:=AddIndyUnit(P,'IdReplyRFC.pas');
    T:=AddIndyUnit(P,'IdReplySMTP.pas');
    T:=AddIndyUnit(P,'IdResourceStrings.pas');
    T.ResourceStrings:=True;
    T:=AddIndyUnit(P,'IdResourceStringsCore.pas');
    T.ResourceStrings:=True;
    T:=AddIndyUnit(P,'IdResourceStringsProtocols.pas');
    T.ResourceStrings:=True;
    T:=AddIndyUnit(P,'IdRexec.pas');
    T:=AddIndyUnit(P,'IdRexecServer.pas');
    T:=AddIndyUnit(P,'IdSASL.pas');
    T:=AddIndyUnit(P,'IdSASLAnonymous.pas');
    T:=AddIndyUnit(P,'IdSASLCollection.pas');
    T:=AddIndyUnit(P,'IdSASLDigest.pas');
    T:=AddIndyUnit(P,'IdSASLExternal.pas');
    T:=AddIndyUnit(P,'IdSASLLogin.pas');
    T:=AddIndyUnit(P,'IdSASLOTP.pas');
    T:=AddIndyUnit(P,'IdSASLPlain.pas');
    T:=AddIndyUnit(P,'IdSASLSKey.pas');
    T:=AddIndyUnit(P,'IdSASLUserPass.pas');
    T:=AddIndyUnit(P,'IdSASL_CRAMBase.pas');
    T:=AddIndyUnit(P,'IdSASL_CRAM_MD5.pas');
    T:=AddIndyUnit(P,'IdSASL_CRAM_SHA1.pas');
    T:=AddIndyUnit(P,'IdSMTP.pas');
    T:=AddIndyUnit(P,'IdSMTPBase.pas');
    T:=AddIndyUnit(P,'IdSMTPRelay.pas');
    T:=AddIndyUnit(P,'IdSMTPServer.pas');
    T:=AddIndyUnit(P,'IdSNMP.pas');
    T:=AddIndyUnit(P,'IdSNPP.pas');
    T:=AddIndyUnit(P,'IdSNTP.pas');
    T:=AddIndyUnit(P,'IdSSL.pas');
    T:=AddIndyUnit(P,'IdScheduler.pas');
    T:=AddIndyUnit(P,'IdSchedulerOfThread.pas');
    T:=AddIndyUnit(P,'IdSchedulerOfThreadDefault.pas');
    T:=AddIndyUnit(P,'IdSchedulerOfThreadPool.pas');
    T:=AddIndyUnit(P,'IdServerIOHandler.pas');
    T:=AddIndyUnit(P,'IdServerIOHandlerSocket.pas');
    T:=AddIndyUnit(P,'IdServerIOHandlerStack.pas');
    T:=AddIndyUnit(P,'IdServerInterceptLogBase.pas');
    T:=AddIndyUnit(P,'IdServerInterceptLogEvent.pas');
    T:=AddIndyUnit(P,'IdServerInterceptLogFile.pas');
    T:=AddIndyUnit(P,'IdSimpleServer.pas');
    T:=AddIndyUnit(P,'IdSocketHandle.pas');
    T:=AddIndyUnit(P,'IdSocks.pas');
    T:=AddIndyUnit(P,'IdStack.pas');
    T:=AddIndyUnit(P,'IdStackConsts.pas');
    T:=AddIndyUnit(P,'IdStream.pas');
    T:=AddIndyUnit(P,'IdStreamVCL.pas');
    T:=AddIndyUnit(P,'IdStrings.pas');
    T:=AddIndyUnit(P,'IdStruct.pas');
    T:=AddIndyUnit(P,'IdSync.pas');
    T:=AddIndyUnit(P,'IdSysLog.pas');
    T:=AddIndyUnit(P,'IdSysLogMessage.pas');
    T:=AddIndyUnit(P,'IdSysLogServer.pas');
    T:=AddIndyUnit(P,'IdSystat.pas');
    T:=AddIndyUnit(P,'IdSystatServer.pas');
    T:=AddIndyUnit(P,'IdSystatUDP.pas');
    T:=AddIndyUnit(P,'IdSystatUDPServer.pas');
    T:=AddIndyUnit(P,'IdTCPClient.pas');
    T:=AddIndyUnit(P,'IdTCPConnection.pas');
    T:=AddIndyUnit(P,'IdTCPServer.pas');
    T:=AddIndyUnit(P,'IdTCPStream.pas');
    T:=AddIndyUnit(P,'IdTask.pas');
    T:=AddIndyUnit(P,'IdTelnet.pas');
    T:=AddIndyUnit(P,'IdTelnetServer.pas');
    T:=AddIndyUnit(P,'IdText.pas');
    T:=AddIndyUnit(P,'IdThread.pas');
    T:=AddIndyUnit(P,'IdThreadComponent.pas');
    T:=AddIndyUnit(P,'IdThreadSafe.pas');
    T:=AddIndyUnit(P,'IdTime.pas');
    T:=AddIndyUnit(P,'IdTimeServer.pas');
    T:=AddIndyUnit(P,'IdTimeUDP.pas');
    T:=AddIndyUnit(P,'IdTimeUDPServer.pas');
    T:=AddIndyUnit(P,'IdTraceRoute.pas');
    T:=AddIndyUnit(P,'IdTrivialFTP.pas');
    T:=AddIndyUnit(P,'IdTrivialFTPBase.pas');
    T:=AddIndyUnit(P,'IdTrivialFTPServer.pas');
    T:=AddIndyUnit(P,'IdUDPBase.pas');
    T:=AddIndyUnit(P,'IdUDPClient.pas');
    T:=AddIndyUnit(P,'IdUDPServer.pas');
    T:=AddIndyUnit(P,'IdURI.pas');
    T:=AddIndyUnit(P,'IdUnixTime.pas');
    T:=AddIndyUnit(P,'IdUnixTimeServer.pas');
    T:=AddIndyUnit(P,'IdUnixTimeUDP.pas');
    T:=AddIndyUnit(P,'IdUnixTimeUDPServer.pas');
    T:=AddIndyUnit(P,'IdUriUtils.pas');
    T:=AddIndyUnit(P,'IdUserAccounts.pas');
    T:=AddIndyUnit(P,'IdUserPassProvider.pas');
    T:=AddIndyUnit(P,'IdVCard.pas');
    T:=AddIndyUnit(P,'IdWebDAV.pas');
    T:=AddIndyUnit(P,'IdWhoIsServer.pas');
    T:=AddIndyUnit(P,'IdWhois.pas');
    T:=AddIndyUnit(P,'IdYarn.pas');
    T:=AddIndyUnit(P,'IdZLibCompressorBase.pas');

    T:=AddIndyUnit(P,'IdStackBSDBase.pas');
    T.OSes:=AllUnixOSes + AllWindowsOSes;
    T:=AddIndyUnit(P,'IdSSLOpenSSLHeaders.pas');
    T.OSes:=AllUnixOSes + [win32,win64];
    T:=AddIndyUnit(P,'IdZLibHeaders.pas');
    T.OSes:=AllUnixOSes + [win32,win64];
    T:=AddIndyUnit(P,'IdZLib.pas');
    T.OSes:=AllUnixOSes + [win32,win64];
    T:=AddIndyUnit(P,'IdZLibConst.pas');
    T.OSes:=AllUnixOSes + [win32,win64];
    T.ResourceStrings:=True;
    T:=AddIndyUnit(P,'IdNTLM.pas');
    T.OSes:=AllUnixOSes + [win32,win64];
    T:=AddIndyUnit(P,'IdCompressorZLib.pas');
    T.OSes:=AllUnixOSes + [win32,win64];
    T:=AddIndyUnit(P,'IdSSLOpenSSL.pas');
    T.OSes:=AllUnixOSes + [win32,win64];
    T:=AddIndyUnit(P,'IdCompressionIntercept.pas');
    T.OSes:=AllUnixOSes + [win32,win64];
    T:=AddIndyUnit(P,'IdAuthenticationNTLM.pas');
    T.OSes:=AllUnixOSes + [win32,win64];
    {$IFDEF KYLIXCOMPAT}
    T:=AddIndyUnit(P,'IdStackLibc.pas');
    T.OSes:=[linux];
    T.CPUs:=[i386];
    T:=AddIndyUnit(P,'IdStackUnix.pas');
    T.OSes:=[linux];
    T.CPUs:=T.CPUs - [i386];
    T:=AddIndyUnit(P,'IdStackUnix.pas');
    T.OSes:=AllUnixOSes - [linux];
    {$ELSE}
    T:=AddIndyUnit(P,'IdStackUnix.pas');
    T.OSes:=AllUnixOSes;
    {$ENDIF}
    T:=AddIndyUnit(P,'IdStackWindows.pas');
    T.OSes:=AllWindowsOSes;
    T:=AddIndyUnit(P,'IdWinsock2.pas');
    T.OSes:=AllWindowsOSes;
    T:=AddIndyUnit(P,'IdWship6.pas');
    T.OSes:=AllWindowsOSes;
    T:=AddIndyUnit(P,'IdSSPI.pas');
    T.OSes:=[win32,win64];
    T:=AddIndyUnit(P,'IdAuthenticationSSPI.pas');
    T.OSes:=[win32,win64];
    Run;
    end;
end.

